{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.21.1.54444",
      "templateHash": "5698708636951765885"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "defaultValue": "bulk",
      "metadata": {
        "description": "Prefix for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "fhirType": {
      "type": "string",
      "defaultValue": "FhirService",
      "allowedValues": [
        "FhirService",
        "APIforFhir",
        "FhirServer"
      ],
      "metadata": {
        "description": "Type of FHIR instance to integrate the loader with."
      }
    },
    "fhirServiceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the FHIR Service to load resources into. Format is \"workspace/fhirService\"."
      }
    },
    "apiForFhirName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name of the API for FHIR to load resources into."
      }
    },
    "fhirServiceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the FHIR Service to load resources into."
      }
    },
    "apiForFhirId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the API for FHIR to load resources into."
      }
    },
    "fhirServerUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The full URL of the OSS FHIR Server to load resources."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "managedIdentity",
      "allowedValues": [
        "managedIdentity",
        "servicePrincipal"
      ],
      "metadata": {
        "description": "Type of FHIR instance to integrate the loader with."
      }
    },
    "appServiceSize": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1v2",
        "P2v2",
        "P3v2",
        "P1v3",
        "P2v3",
        "P3v3"
      ],
      "metadata": {
        "description": "Size of the app service to run loader function"
      }
    },
    "serviceAccountClientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "If not using MSI, client ID of the service account used to connect to the FHIR Server"
      }
    },
    "serviceAccountSecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "If not using MSI, client secret of the service account used to connect to the FHIR Server"
      }
    },
    "fhirAudience": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Audience used for FHIR Server tokens. Leave blank to use the FHIR url which will work for default FHIR deployments."
      }
    },
    "createRoleAssignment": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Automatically create a role assignment for the function app to access the FHIR service."
      }
    },
    "fhirContributorRoleAssignmentId": {
      "type": "string",
      "defaultValue": "5a1fc7df-4bf1-4951-a576-89034ee01acd",
      "metadata": {
        "description": "The Bulk Loader function app needs to access the FHIR service. This is the role assignment ID to use."
      }
    },
    "transformTransactionBundles": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Transform transaction bundles to batch budles."
      }
    }
  },
  "variables": {
    "repoUrl": "https://github.com/microsoft/fhir-loader/",
    "fhirUrl": "[if(equals(parameters('fhirType'), 'FhirService'), format('https://{0}.fhir.azurehealthcareapis.com', replace(parameters('fhirServiceName'), '/', '-')), if(equals(parameters('fhirType'), 'APIforFhir'), format('https://{0}.azurehealthcareapis.com', parameters('apiForFhirName')), parameters('fhirServerUrl')))]",
    "fhirResourceIdSplit": "[if(equals(parameters('fhirType'), 'FhirService'), split(parameters('fhirServiceId'), '/'), split(parameters('apiForFhirId'), '/'))]",
    "fhirResourceGroupName": "[variables('fhirResourceIdSplit')[4]]",
    "tenantId": "[subscription().tenantId]",
    "appTags": {
      "AppID": "fhir-loader-function"
    },
    "uniqueResourceIdentifier": "[substring(uniqueString(resourceGroup().id, parameters('prefix')), 0, 4)]",
    "prefixNameClean": "[format('{0}{1}', replace(parameters('prefix'), '-', ''), variables('uniqueResourceIdentifier'))]",
    "prefixNameCleanShort": "[if(greater(length(variables('prefixNameClean')), 16), substring(variables('prefixNameClean'), 0, 8), variables('prefixNameClean'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', format('{0}stor', variables('prefixNameCleanShort')), 'default', 'bundles')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}stor', variables('prefixNameCleanShort')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', format('{0}stor', variables('prefixNameCleanShort')), 'default', 'ndjson')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}stor', variables('prefixNameCleanShort')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', format('{0}stor', variables('prefixNameCleanShort')), 'default', 'zip')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}stor', variables('prefixNameCleanShort')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', format('{0}stor', variables('prefixNameCleanShort')), 'default', 'export')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}stor', variables('prefixNameCleanShort')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}/{2}', format('{0}stor', variables('prefixNameCleanShort')), 'default', 'export-trigger')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}stor', variables('prefixNameCleanShort')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}/{1}', format('{0}stor', variables('prefixNameCleanShort')), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-func', variables('prefixNameCleanShort')), 'web')]",
      "properties": {
        "ftpsState": "Disabled",
        "minTlsVersion": "1.2"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('{0}-func', variables('prefixNameCleanShort')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-func', variables('prefixNameCleanShort')), 'ftp')]",
      "location": "[parameters('location')]",
      "properties": {
        "allow": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('{0}-func', variables('prefixNameCleanShort')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-func', variables('prefixNameCleanShort')), 'scm')]",
      "location": "[parameters('location')]",
      "properties": {
        "allow": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('{0}-func', variables('prefixNameCleanShort')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-08-01",
      "name": "[format('{0}stor', variables('prefixNameCleanShort'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "metadata": {
        "description": "Storage account used for loading files"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', format('{0}stor', variables('prefixNameCleanShort')), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort')))]"
      ],
      "metadata": {
        "description": "Storage Queue Service"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', format('{0}stor', variables('prefixNameCleanShort')), 'default', 'bundlequeue')]",
      "properties": {
        "metadata": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', format('{0}stor', variables('prefixNameCleanShort')), 'default')]"
      ],
      "metadata": {
        "description": "Storage Queue for Bundle Blob processing"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}/{2}', format('{0}stor', variables('prefixNameCleanShort')), 'default', 'ndjsonqueue')]",
      "properties": {
        "metadata": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', format('{0}stor', variables('prefixNameCleanShort')), 'default')]"
      ],
      "metadata": {
        "description": "Storage Queue for NDJSON Blob processing"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}-app', variables('prefixNameCleanShort'))]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "sku": {
        "name": "[parameters('appServiceSize')]"
      },
      "properties": {
        "targetWorkerCount": 2
      },
      "tags": "[variables('appTags')]",
      "metadata": {
        "description": "App Service used to run Azure Function"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}-func', variables('prefixNameCleanShort'))]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "httpsOnly": true,
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-app', variables('prefixNameCleanShort')))]",
        "clientAffinityEnabled": false,
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            }
          ]
        }
      },
      "tags": "[variables('appTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-app', variables('prefixNameCleanShort')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort')))]"
      ],
      "metadata": {
        "description": "Azure Function used to run toolkit compute"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-func', variables('prefixNameCleanShort')), 'appsettings')]",
      "properties": {
        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('{0}stor', variables('prefixNameCleanShort')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort'))), '2021-08-01').keys[0].value)]",
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', format('{0}-ai', variables('prefixNameCleanShort'))), '2020-02-02-preview').InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', format('{0}-ai', variables('prefixNameCleanShort'))), '2020-02-02-preview').ConnectionString]",
        "SCM_DO_BUILD_DURING_DEPLOYMENT": "true",
        "AzureWebJobs.ImportBundleBlobTrigger.Disabled": "1",
        "AzureFunctionsJobHost__functionTimeout": "23:00:00",
        "FBI-STORAGEACCT": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', format('{0}stor', variables('prefixNameCleanShort')), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort'))), '2021-08-01').keys[0].value)]",
        "FS-URL": "[variables('fhirUrl')]",
        "FS-RESOURCE": "[if(empty(parameters('fhirAudience')), variables('fhirUrl'), parameters('fhirAudience'))]",
        "FS-TENANT-NAME": "[variables('tenantId')]",
        "FS-ISMSI": "[if(equals(parameters('authenticationType'), 'managedIdentity'), 'true', 'false')]",
        "FS-CLIENT-ID": "[if(equals(parameters('authenticationType'), 'servicePrincipal'), parameters('serviceAccountClientId'), '')]",
        "FS-SECRET": "[if(equals(parameters('authenticationType'), 'servicePrincipal'), parameters('serviceAccountSecret'), '')]",
        "TRANSFORMBUNDLES": "[format('{0}', parameters('transformTransactionBundles'))]",
        "FBI-MAXBUNDLESIZE": "500",
        "FBI-MAXRESOURCESPERBUNDLE": "500",
        "FBI-POLLY-MAXRETRIES": "3",
        "FBI-POLLY-RETRYMS": "500",
        "FBI-POOLEDCON-RESPONSEDRAINSECS": "60",
        "FBI-POOLEDCON-LIFETIME": "5",
        "FBI-POOLEDCON-IDLETO": "2",
        "FBI-POOLEDCON-MAXCONNECTIONS": "20",
        "FBI-MAXFILESIZEMB": "-1",
        "FBI-MAXEXPORTS": "-1",
        "FBI-EXPORTPURGEAFTERDAYS": "30",
        "FBI-POISONQUEUE-TIMER-CRON": "0 */2 * * * *"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-ai', variables('prefixNameCleanShort')))]",
        "[resourceId('Microsoft.Web/sites', format('{0}-func', variables('prefixNameCleanShort')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', format('{0}-func', variables('prefixNameCleanShort')), 'web')]",
      "properties": {
        "repoUrl": "[variables('repoUrl')]",
        "branch": "main",
        "isManualIntegration": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('{0}-func', variables('prefixNameCleanShort')))]"
      ],
      "metadata": {
        "description": "Uses source control deploy if requested"
      }
    },
    {
      "type": "Microsoft.EventGrid/eventSubscriptions",
      "apiVersion": "2022-06-15",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}stor', variables('prefixNameCleanShort')))]",
      "name": "ndjsoncreated",
      "properties": {
        "destination": {
          "endpointType": "StorageQueue",
          "properties": {
            "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort')))]",
            "queueName": "ndjsonqueue"
          }
        },
        "filter": {
          "advancedFilters": [
            {
              "key": "data.api",
              "operatorType": "StringIn",
              "values": [
                "CopyBlob",
                "PutBlob",
                "PutBlockList",
                "FlushWithClose"
              ]
            }
          ],
          "subjectBeginsWith": "/blobServices/default/containers/ndjson",
          "subjectEndsWith": ".ndjson"
        },
        "eventDeliverySchema": "EventGridSchema"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort')))]"
      ],
      "metadata": {
        "description": "Subscription to ndjson container"
      }
    },
    {
      "type": "Microsoft.EventGrid/eventSubscriptions",
      "apiVersion": "2022-06-15",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}stor', variables('prefixNameCleanShort')))]",
      "name": "bundlecreated",
      "properties": {
        "destination": {
          "endpointType": "StorageQueue",
          "properties": {
            "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort')))]",
            "queueName": "bundlequeue"
          }
        },
        "filter": {
          "advancedFilters": [
            {
              "key": "data.api",
              "operatorType": "StringIn",
              "values": [
                "CopyBlob",
                "PutBlob",
                "PutBlockList",
                "FlushWithClose"
              ]
            }
          ],
          "subjectBeginsWith": "/blobServices/default/containers/bundles",
          "subjectEndsWith": ".json"
        },
        "eventDeliverySchema": "EventGridSchema"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}stor', variables('prefixNameCleanShort')))]"
      ],
      "metadata": {
        "description": "Subscription to bundle container"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[format('{0}-ai', variables('prefixNameCleanShort'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      },
      "tags": "[variables('appTags')]",
      "metadata": {
        "description": "Monitoring for Function App"
      }
    },
    {
      "condition": "[equals(parameters('createRoleAssignment'), true())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "role-assign-fhir",
      "resourceGroup": "[variables('fhirResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "fhirUrl": {
            "value": "[variables('fhirUrl')]"
          },
          "fhirType": {
            "value": "[parameters('fhirType')]"
          },
          "fhirContributorRoleAssignmentId": {
            "value": "[parameters('fhirContributorRoleAssignmentId')]"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Web/sites', format('{0}-func', variables('prefixNameCleanShort'))), '2021-03-01', 'full').identity.principalId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "3790216184586938451"
            }
          },
          "parameters": {
            "fhirUrl": {
              "type": "string"
            },
            "fhirType": {
              "type": "string"
            },
            "fhirContributorRoleAssignmentId": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            },
            "principalType": {
              "type": "string",
              "defaultValue": "ServicePrincipal"
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]"
            }
          },
          "variables": {
            "fhirUrlClean": "[replace(split(parameters('fhirUrl'), '.')[0], 'https://', '')]",
            "fhirUrlCleanSplit": "[split(variables('fhirUrlClean'), '-')]"
          },
          "resources": [
            {
              "condition": "[equals(parameters('fhirType'), 'FhirService')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.HealthcareApis/workspaces/{0}/fhirservices/{1}', split(concat(variables('fhirUrlCleanSplit')[0], '/', join(skip(variables('fhirUrlCleanSplit'), 1), '-')), '/')[0], split(concat(variables('fhirUrlCleanSplit')[0], '/', join(skip(variables('fhirUrlCleanSplit'), 1), '-')), '/')[1])]",
              "name": "[guid(parameters('principalId'), resourceId('Microsoft.HealthcareApis/workspaces/fhirservices', split(concat(variables('fhirUrlCleanSplit')[0], '/', join(skip(variables('fhirUrlCleanSplit'), 1), '-')), '/')[0], split(concat(variables('fhirUrlCleanSplit')[0], '/', join(skip(variables('fhirUrlCleanSplit'), 1), '-')), '/')[1]), parameters('fhirContributorRoleAssignmentId'))]",
              "properties": {
                "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', parameters('subscriptionId'), parameters('fhirContributorRoleAssignmentId'))]",
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]"
              }
            },
            {
              "condition": "[equals(parameters('fhirType'), 'APIforFhir')]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.HealthcareApis/services/{0}', variables('fhirUrlClean'))]",
              "name": "[guid(parameters('principalId'), resourceId('Microsoft.HealthcareApis/services', variables('fhirUrlClean')), parameters('fhirContributorRoleAssignmentId'))]",
              "properties": {
                "roleDefinitionId": "[format('/subscriptions/{0}/providers/Microsoft.Authorization/roleDefinitions/{1}', parameters('subscriptionId'), parameters('fhirContributorRoleAssignmentId'))]",
                "principalId": "[parameters('principalId')]",
                "principalType": "[parameters('principalType')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('{0}-func', variables('prefixNameCleanShort')))]"
      ]
    }
  ]
}