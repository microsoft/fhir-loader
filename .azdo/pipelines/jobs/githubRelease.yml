steps:
  - checkout: self
    persistCredentials: true
    displayName: Checkout source with credentials

  - download: current
    artifact: $(PackageArtifactName)
    displayName: "Get published output"

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Pipeline.Workspace)/$(PackageArtifactName)/'
      includeRootFolder: false
      archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(PackageArtifactName).zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.

  - task: UniversalPackages@0
    displayName: Publish to Azure Artifacts
    inputs:
      command: publish
      publishDirectory: '$(Pipeline.Workspace)/$(PackageArtifactName)/'
      vstsFeedPublish: 'AppliedOpenSourceTools/FhirLoader'
      vstsFeedPackagePublish: '$[lower(variables.BulkImportFunction)]'
      versionOption: custom
      versionPublish: '$(Version)'

  - task: GithubRelease@1 
    displayName: 'Create GitHub Release'
    inputs:
      gitHubConnection: 'Github ($(RepositoryName))'
      repositoryName: $(RepositoryName)
      action: 'create'
      tagSource: userSpecifiedTag
      
      tag: '$(ReleasePrefix)-v$(Version)'
      title: '$(ReleasePrefix) $(Version)'
      isPreRelease: false
      assets: |
        $(Build.ArtifactStagingDirectory)/$(PackageArtifactName).zip

  # - script: echo "##vso[task.setvariable variable=PackageReadme]$(cat $(Build.Repository.LocalPath)/deployment/dp)"